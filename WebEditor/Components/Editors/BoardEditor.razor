@using System.Text.Json
@using Blazor.DownloadFileFast.Interfaces
@using System.Diagnostics.CodeAnalysis
@using System.Text
@inject IJSRuntime JSRuntime
@inject IBlazorDownloadFileService BlazorDownloadFileService
@inject ToolManager ToolManager
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="editor-content">
    <div class="editor-menu">
        <h1 class="display-6" style="margin-bottom: 20px;">Board Editor</h1>

        <button type="button" class="btn btn-primary" @onclick="@(() => LoadBoard())" style="margin-bottom: 10px;">
            <i class="bi bi-folder"></i> Load File
        </button>

        <InputFile @ref="@_inputFile" OnChange="@OnFileSelected" hidden/>

        <button type="button" class="btn btn-primary" @onclick="@(() => SaveBoard())" style="margin-bottom: 10px;">
            <i class="bi bi-save"></i> Save File
        </button>

        <button type="button" class="btn btn-primary" @onclick="@(() => ToolManager.Tool = EraseTool.Shared)" style="margin-bottom: 10px;">
            <i class="bi bi-eraser"></i> Erase
        </button>

        <button type="button" class="btn btn-primary" @onclick="@(() => ToolManager.Tool = TileTool.Shared)" style="margin-bottom: 10px;">
            <i class="bi bi-grid"></i> Add Tiles
        </button>

        <button type="button" class="btn btn-primary" @onclick="@(() => NewBoard())" style="margin-bottom: 10px;">
            <i class="bi bi-file-earmark-plus"></i> New Map
        </button>

        <div class="input-group mb-3">
            <span class="input-group-text">Width:</span>
            <InputNumber class="form-control" @bind-Value="_width" />
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Height:</span>
            <InputNumber class="form-control" @bind-Value="_height" />
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text">Zoom:</span>
            <InputSelect class="form-select" @bind-Value="_zoom">
                <option value="0.25">25%</option>
                <option value="0.5">50%</option>
                <option value="0.75">75%</option>
                <option checked value="1">100%</option>
                <option value="1.25">125%</option>
                <option value="1.5">150%</option>
                <option value="2">200%</option>
            </InputSelect>
        </div>

    </div>
    <div class="board-panel">
        <BoardRenderer Board="@_board" Zoom="@_zoom" Width="@_width" Height="@_height" />
    </div>
    <div class="panels-content">
        <CascadingValue Value="@_board">
            <InspectorPanel />
            <FigurePanel />
        </CascadingValue>
    </div>
</div>

@code
{
    private int _height = 20;
    private int _width = 20;
    private float _zoom = 1;
    [AllowNull]
    private BoardData _board = new();
    [AllowNull]
    private InputFile _inputFile;
    public async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        const int MaxSize = 100 * 1024 * 1024; // 100 MB
                                               // TODO: This reads the entire string then parses it. probably a better way?
        string? reader =
            await new StreamReader(e.File.OpenReadStream(MaxSize)).ReadToEndAsync();
        if (!BoardExtensions.TryFromJson(reader, out BoardData? result))
        {
            // TODO: Error handling
            Console.WriteLine("Error");
            return;
        }
        _board = result;
    }

    private async Task LoadBoard()
    {
        await JSRuntime.InvokeVoidAsync("HTMLElement.prototype.click.call", _inputFile.Element);
    }

    private async Task SaveBoard()
    {
        var bytes = Encoding.UTF8.GetBytes(_board.ToJson());
        await BlazorDownloadFileService.DownloadFileAsync("Board.json", bytes, "application/json");
    }

    private void NewBoard() => _board = new();

    protected override void OnInitialized()
    {
        _board = new();
    }
}